name: .NET

on:
  push:
    branches:
      - 'main'
      - 'v**'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    env:
      # https://www.donovanbrown.com/post/Stop-wasting-time-during-NET-Core-builds
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: '1'
      DOTNET_NOLOGO: '1'
      DOTNET_CLI_TELEMETRY_OPTOUT: '1'
      # See more here: https://docs.microsoft.com/en-us/dotnet/core/dependency-loading/default-probing#how-do-i-debug-the-probing-properties-construction.
      COREHOST_TRACE: '0'
      # See more here: https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-environment-variables.
      NUGET_XMLDOC_MODE: 'skip'
      DOTNET_MULTILEVEL_LOOKUP: 0
    steps:
    - uses: actions/checkout@v2
    - name: Install .NET
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        ./eng/install-sdk.sh
        echo "DOTNET_ROOT=$GITHUB_WORKSPACE/eng/.dotnet" >> $GITHUB_ENV
        echo "$GITHUB_WORKSPACE/eng/.dotnet" >> $GITHUB_PATH

    - name: Install .NET
      if: matrix.os == 'windows-latest'
      run: |
        ./eng/install-sdk.ps1
        echo "DOTNET_ROOT=$GITHUB_WORKSPACE/eng/.dotnet" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
        echo "$GITHUB_WORKSPACE/eng/.dotnet" | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf-8 -Append

    - name: Print host info
      run: printenv && dotnet --info

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build

    - name: Run Tool PowerShell
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: ./src/dotnet-affected/bin/Debug/net5.0/dotnet-affected -p $Env:GITHUB_WORKSPACE --assume-changes dotnet-affected -v

    - name: Run Tool Bash
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      shell: bash
      run: ./src/dotnet-affected/bin/Debug/net5.0/dotnet-affected -p $GITHUB_WORKSPACE --assume-changes dotnet-affected -v
    
    - name: Pack
      if: success() && github.ref == 'refs/heads/main'
      run: dotnet pack --no-restore --no-build --include-symbols -p:SymbolPackageFormat=snupkg -o .

    - name: Push to NuGet
      if: success() && github.ref == 'refs/heads/main'
      run: dotnet nuget push *.nupkg --skip-duplicate -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}}

    - uses: dotnet/nbgv@master
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ steps.nbgv.outputs.SemVer2 }}"
        prerelease: "${{ github.ref == 'refs/heads/main'}}"
        title: "${{ steps.nbgv.outputs.SemVer2 }}"
        files: |
            LICENSE.txt
            *.nupkg
